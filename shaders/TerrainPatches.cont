#version 400

layout(vertices = 4) out; // a patch has 4 verticies

// program Uniforms
uniform vec3 eyePos;

vec3 getPatchAvgPos()
{
    vec3 patch_avg_pos = (gl_in[0].gl_Position.xyz + 
                            gl_in[1].gl_Position.xyz + 
                            gl_in[2].gl_Position.xyz + 
                            gl_in[3].gl_Position.xyz) * 0.25;
    return patch_avg_pos;
}


int getLevel(float dist)
{
    
    float low_Level = 30.0, high_level = 100.0;
    float min_dist = 0.0;
    float max_dist = abs(distance(vec3(-45.0, 0.0, -90.0), vec3(180.0, 0.0, 135.0)));

    int level = int(((dist - min_dist) / (max_dist - min_dist)) * (low_Level - high_level) + high_level);

    if (level < int(low_Level)) level = int(low_Level);
    if (level > int(high_level)) level = int(high_level);

    return level;
}


void main()
{


    
    float dist = abs(distance(eyePos, getPatchAvgPos())); // The distance d between the camera and the centre of the patch

    int level = getLevel(dist);

    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;


    gl_TessLevelOuter[0] = level;
    gl_TessLevelOuter[1] = level;
    gl_TessLevelOuter[2] = level;
    gl_TessLevelOuter[3] = level;
    gl_TessLevelInner[0] = level;
    gl_TessLevelInner[1] = level;
}